version: '3'

volumes:
  recrutation_excercise_local_postgres_data: {}
  recrutation_excercise_local_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: recrutation_excercise_local_django
    container_name: recrutation_excercise_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: recrutation_excercise_production_postgres
    container_name: recrutation_excercise_local_postgres
    volumes:
      - recrutation_excercise_local_postgres_data:/var/lib/postgresql/data
      - recrutation_excercise_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: recrutation_excercise_local_docs
    container_name: recrutation_excercise_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./recrutation_excercise:/app/recrutation_excercise:z
    ports:
      - "9000:9000"
    command: /start-docs

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
    restart: always
    depends_on:
      - django
